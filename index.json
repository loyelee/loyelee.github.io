[{"content":"使用Hexo配置自己的博客后，感觉很多方面都要轻松很多，一开始我是在Hexo Theme Page里面找到了一个比较好看的主题，奈何配置上之后，很多功能无法实现，且开发者好像也不再维护更新了，最终我还是决定使用Next博客，配置项的确是挺多的，所以功能也比较齐全，目前也有社区在维护更新\nNext博客的主页总是会将你的文章全文显示出来，这样可读性是比较差的，如果你文章特别长的话，对于加载也有一定的影响，另一方面，没有目录，访问者无法清楚的找出自己要得到的内容\n所以我觉得还是要设置一些，让主页不显示全文，\nGoogle了一下，发现解决方法就是打开主题下的配置文件，将下面的enable改为true就可以了\nauto_excerpt: enable: false 奈何我在配置文件中根本就没找到这个关键词，可能是主题配置重写了吧，下面说说我的解决步骤\n打开themes/next 目录下的 config.yml ，查看摘要描述是否为true，默认是开启的\n# Automatically excerpt description in homepage as preamble text. excerpt_description: true 然后你有两种方法，让你文章在首页只显示部分\n1.写概述 在文章的最上面 front-matter 中添加 description,\n然后在冒号后面写你这篇文章的概述，配置完成后，你的主页就只会显示这篇文章的description\ntitle: 文章标题 date: 2020-05-04 13:07:04 description: 首页的概述，正文内容不会显示 2.截断文章 在需要截断的地方加入\ne这时候首页就只会显示这条语句以上的内容，隐藏语句后面的所有内容\n两种方法，各有长处，大家可以自己斟酌使用\n","permalink":"https://blog.loyio.me/posts/hexo-next-theme-nondisplay-fullpassage/","summary":"\u003cp\u003e使用Hexo配置自己的博客后，感觉很多方面都要轻松很多，一开始我是在Hexo Theme Page里面找到了一个比较好看的主题，奈何配置上之后，很多功能无法实现，且开发者好像也不再维护更新了，最终我还是决定使用Next博客，配置项的确是挺多的，所以功能也比较齐全，目前也有社区在维护更新\u003c/p\u003e\n\u003cp\u003eNext博客的主页总是会将你的文章全文显示出来，这样可读性是比较差的，如果你文章特别长的话，对于加载也有一定的影响，另一方面，没有目录，访问者无法清楚的找出自己要得到的内容\u003c/p\u003e\n\u003cp\u003e所以我觉得还是要设置一些，让主页不显示全文，\u003c/p\u003e\n\u003cp\u003eGoogle了一下，发现解决方法就是打开主题下的配置文件，将下面的enable改为true就可以了\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"color:#f92672\"\u003eauto_excerpt\u003c/span\u003e:\n  \u003cspan style=\"color:#f92672\"\u003eenable\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003efalse\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e奈何我在配置文件中根本就没找到这个关键词，可能是主题配置重写了吧，下面说说我的解决步骤\u003c/p\u003e\n\u003cp\u003e打开\u003ccode\u003ethemes/next\u003c/code\u003e 目录下的 \u003ccode\u003econfig.yml\u003c/code\u003e ，查看摘要描述是否为true，默认是开启的\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"color:#75715e\"\u003e# Automatically excerpt description in homepage as preamble text.\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003eexcerpt_description\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e然后你有两种方法，让你文章在首页只显示部分\u003c/p\u003e\n\u003ch4 id=\"1写概述\"\u003e1.写概述\u003c/h4\u003e\n\u003cp\u003e在文章的最上面 \u003ccode\u003efront-matter\u003c/code\u003e 中添加 \u003ccode\u003edescription\u003c/code\u003e,\u003c/p\u003e\n\u003cp\u003e然后在冒号后面写你这篇文章的概述，配置完成后，你的主页就只会显示这篇文章的\u003ccode\u003edescription\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-markdown\" data-lang=\"markdown\"\u003etitle: 文章标题\ndate: 2020-05-04 13:07:04\ndescription: 首页的概述，正文内容不会显示\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"2截断文章\"\u003e2.截断文章\u003c/h4\u003e\n\u003cp\u003e在需要截断的地方加入\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e","title":"Hexo Next Theme Nondisplay Fullpassage"},{"content":"1.什么是SEO SEO（Search Engine Optimization）顾名思义就是搜索引擎优化，比如你想让别人在百度、google搜索某些内容时，刚好可以出现自己网站的链接，简单来说，就是提高你个人网站的流量。虽然我这人本来就没想过要什么流量，主要目的是想记录一些东西，给自己看的，但是，如果自己的博客能够帮助到别人解决问题，我感觉还是挺值得的。我下面介绍的都是Hexo静态网站博客相关的\n2.站点地图 也就是sitemap，站点地图可以告诉搜索引擎自己的网站有哪些可以抓取的内容，可以帮助搜索引擎更智能地抓取网站各个分支内容\n1⃣️ 生成站点地图 首先要安装百度和谷歌（Google）的站点地图生成插件\nnpm install hexo-generator-baidu-sitemap --save npm install hexo-generator-sitemap --save 2⃣️ 修改配置文件 打开博客主目录的config.yml文件，添加下面的sitemap配置内容\n# 生成博客sitemap sitemap: path: sitemap.xml baidusitemap: path: baidusitemap.xml 3⃣️ 生成页面并部署到服务器 这个直接使用一键命令就可以了\nhexo g -d 可以看到自己的public目录已经有下面两个文件了\n3.百度站长平台 1⃣️ 添加网站 首先你要打开下面的网站\nhttps://ziyuan.baidu.com/\n然后登录你的账号，好像直接用百度账号就可以了，进入控制台，页面如下\n点击下面的添加网站\n根据步骤，选择站点属性，然后开始验证网站\n我在这里选择的是文件验证，下载验证文件，然后把它放到你的网站根目录的source文件夹下，然后执行生成部署命令\nhexo clean hexo g -d 然后点击完成验证就可以了 (❗如果验证失败，建议先生成页面，然后将文件放到public文件夹中，然后再部署到服务器)\n2⃣️ 链接提交 我们在这里讲一下自动提交方法，手动提交按照要求在括号内填入链接即可\n自动提交也有三种选项，主动推送、自动推送以及sitemap\n1.主动推送 我们要用到hexo的插件，输入命令安装即可\nnpm install hexo-baidu-url-submit --save 然后在_config.yml文件添加以下内容\nbaidu_url_submit: count: 5 ## 提交最新的五个链接 host: blog.loyio.me ## 百度站长平台中注册的域名 token: token ## 准入秘钥 path: baidu_urls.txt ## 文本文档的地址， 新链接会保存在此文本文档里 host后面就是你在百度提交的网站域名\ntoken你点击右边的修改准入密钥，就可以获取了，也可以实时更新自己的密钥\n然后，增加deployer选项\ndeploy: - type: git repo: git@github.com..... branch: master  - type: baidu_url_submitter #百度链接主动提交 最后生成提交就可以了\nhexo g -d 可以看到最后成功提交的输出\n2.自动推送 复制百度提供的自动推送代码\n\u0026lt;script\u0026gt; (function(){ var bp = document.createElement(\u0026#39;script\u0026#39;); var curProtocol = window.location.protocol.split(\u0026#39;:\u0026#39;)[0]; if (curProtocol === \u0026#39;https\u0026#39;) { bp.src = \u0026#39;https://zz.bdstatic.com/linksubmit/push.js\u0026#39;; } else { bp.src = \u0026#39;http://push.zhanzhang.baidu.com/push.js\u0026#39;; } var s = document.getElementsByTagName(\u0026#34;script\u0026#34;)[0]; s.parentNode.insertBefore(bp, s); })(); \u0026lt;/script\u0026gt; 打开主题目录，再打开布局目录下的 post.swig ,比如我的目录链接是这样的 themes/next/layout/post.swig\n将上面的代码粘贴到最后就可以了\n3.sitemap 之前已经生成过sitemap文件了，这里只需要复制链接过去就可以了，比如我的百度sitemap文件链接如下\nhttps://blog.loyio.me/baidusitemap.xml 点击提交就可以了\n4.Google网站站长 打开网站 https://www.google.com/webmasters/ ，然后登录自己的Google账号，点击SEARCH CONSOLE\n选择网址前缀资源类型，也就是第二个\n输入自己网站的域名，点击继续，然后验证所有权，操作方法和百度基本相似，下载文件，然后将它放入文件夹中，生成部署就可以了\n部署完成后，点击验证就可以了，进入Google Search Console，点击右边栏的Sitemaps\n输入之前生成的sitemap.xml，然后点击SUBMIT（提交），就大功告成了\n","permalink":"https://blog.loyio.me/posts/hexo-blog-seo/","summary":"1.什么是SEO SEO（Search Engine Optimization）顾名思义就是搜索引擎优化，比如你想让别人在百度、google搜索某些内容时，刚好可以出现自己网站的链接，简单来说，就是提高你个人网站的流量。虽然我这人本来就没想过要什么流量，主要目的是想记录一些东西，给自己看的，但是，如果自己的博客能够帮助到别人解决问题，我感觉还是挺值得的。我下面介绍的都是Hexo静态网站博客相关的\n2.站点地图 也就是sitemap，站点地图可以告诉搜索引擎自己的网站有哪些可以抓取的内容，可以帮助搜索引擎更智能地抓取网站各个分支内容\n1⃣️ 生成站点地图 首先要安装百度和谷歌（Google）的站点地图生成插件\nnpm install hexo-generator-baidu-sitemap --save npm install hexo-generator-sitemap --save 2⃣️ 修改配置文件 打开博客主目录的config.yml文件，添加下面的sitemap配置内容\n# 生成博客sitemap sitemap: path: sitemap.xml baidusitemap: path: baidusitemap.xml 3⃣️ 生成页面并部署到服务器 这个直接使用一键命令就可以了\nhexo g -d 可以看到自己的public目录已经有下面两个文件了\n3.百度站长平台 1⃣️ 添加网站 首先你要打开下面的网站\nhttps://ziyuan.baidu.com/\n然后登录你的账号，好像直接用百度账号就可以了，进入控制台，页面如下\n点击下面的添加网站\n根据步骤，选择站点属性，然后开始验证网站\n我在这里选择的是文件验证，下载验证文件，然后把它放到你的网站根目录的source文件夹下，然后执行生成部署命令\nhexo clean hexo g -d 然后点击完成验证就可以了 (❗如果验证失败，建议先生成页面，然后将文件放到public文件夹中，然后再部署到服务器)\n2⃣️ 链接提交 我们在这里讲一下自动提交方法，手动提交按照要求在括号内填入链接即可\n自动提交也有三种选项，主动推送、自动推送以及sitemap\n1.主动推送 我们要用到hexo的插件，输入命令安装即可\nnpm install hexo-baidu-url-submit --save 然后在_config.yml文件添加以下内容\nbaidu_url_submit: count: 5 ## 提交最新的五个链接 host: blog.loyio.me ## 百度站长平台中注册的域名 token: token ## 准入秘钥 path: baidu_urls.","title":"Hexo博客SEO优化，将你的网站提交到搜索引擎"},{"content":"之前一直用的是Shadowrocket（俗称小火箭，用了快一年多了吧，感情还是挺深的），配置起来的确要简单很多，但功能也自然谈不上丰富，今天看自己的印度Apple ID里面还有800卢比，想着放里面也是无用，不如花了痛快，于是就果断买了Quantumult x（好像大家常把它叫做圈X）。\n1.购买之前 刚开始搜的时候出现了两个软件，Quantumult 和 Quantumult x，订阅价格差了20人民币左右，于是又在网上了解这两者的区别，总结来说，就是UI不一样，然后Quantumult x支持强大的JS脚本功能，对于喜欢瞎折腾的我当然是选择第二个完整版\n2.寻找教程 在网上搜索了一下，进了非官方Tg群，这里有两个配置教程\nQuantumult 完整教程: https://github.com/shigalin/Quantumult/blob/master/README.md\nQuantumultX 用户教程: https://www.notion.so/kopshawn/Quantumult-X-1d32ddc6e61c4892ad2ec5ea47f00917\n第一个相对比较简单，第二个就是进阶的操作了，不过这两个我都没怎么看\n我打开了 https://merlinblog.xyz/wiki/quanx.html 这个网站，这个写的还是挺不错的，配置起来基本没啥难度\n最关键的网站出来了https://github.com/nzw9314/QuantumultX/tree/master 这个基本上包含了圈X的所有配置和脚本，而且还附有视频讲解，目前也一直在维护\n3.开始配置 具体过程我就不写了，上面的教程写的很清楚，我在这里只说几点我遇到的问题\n自从去年GFW开始加大对ssr的封锁，我当时立即就决定用上给自己的服务器配置上trojan，用到现在也快有五六个月了吧，很久没用过ssr了，也很久没买过机场了，之前一直白嫖谷歌云，后面才开始买阿里云国际的3.5美元套餐，虽然各种服务比不上机场，但感觉用自己搭建的总是安全私密一点（可能是自己的心理作用吧）\n好吧，回到正题，刚开始用圈X的时候我是懵逼的，这东西为什么不像小火煎那样，直接选择要连接的类型，然后在文本框中输入配置就算成功了，\n当然圈X也可以直接输入配置信息进行配置，不过只支持ss，先要用其它的协议，只能去编辑配置源文件，按照Quantumult X的示例文件中添加即可，就改几个参数而已\n下面是trojan的配置，将example.com改成你自己的trojan域名，pwd改成自己的密码就可以了\ntrojan=example.com:443, password=pwd, over-tls=true, tls-verification=true, fast-open=false, udp-relay=false, tag=trojan-tls-01 界面其实还挺好看的\n其实到这一步，基本上代理的功能就完成了，也就是小火箭的功能\n4.高级配置 在Quantumult X中有一个功能叫做重写，其实有点像我们在浏览器用到的js插件，也就是在页面中注入一些其它信息，比如逛京东时，可以看历史最低价\n看netflix时，可以看这个节目在IMDB和豆瓣的评分\n个人感觉是要方便很多\n另一个高级一点的功能就是定时任务，执行js脚本，这个我觉得也挺有用的，比如各种签到任务啊，用Quantumult X的一个比较突出的一个特点就是获取cookie方便多了，不像我搞个签到网站，还要各种抓包，最后还不一定能成功，这里我不过多赘述了，再次贴上项目合集的网址\nhttps://github.com/nzw9314/QuantumultX/tree/master\n","permalink":"https://blog.loyio.me/posts/quantumnltx-config/","summary":"之前一直用的是Shadowrocket（俗称小火箭，用了快一年多了吧，感情还是挺深的），配置起来的确要简单很多，但功能也自然谈不上丰富，今天看自己的印度Apple ID里面还有800卢比，想着放里面也是无用，不如花了痛快，于是就果断买了Quantumult x（好像大家常把它叫做圈X）。\n1.购买之前 刚开始搜的时候出现了两个软件，Quantumult 和 Quantumult x，订阅价格差了20人民币左右，于是又在网上了解这两者的区别，总结来说，就是UI不一样，然后Quantumult x支持强大的JS脚本功能，对于喜欢瞎折腾的我当然是选择第二个完整版\n2.寻找教程 在网上搜索了一下，进了非官方Tg群，这里有两个配置教程\nQuantumult 完整教程: https://github.com/shigalin/Quantumult/blob/master/README.md\nQuantumultX 用户教程: https://www.notion.so/kopshawn/Quantumult-X-1d32ddc6e61c4892ad2ec5ea47f00917\n第一个相对比较简单，第二个就是进阶的操作了，不过这两个我都没怎么看\n我打开了 https://merlinblog.xyz/wiki/quanx.html 这个网站，这个写的还是挺不错的，配置起来基本没啥难度\n最关键的网站出来了https://github.com/nzw9314/QuantumultX/tree/master 这个基本上包含了圈X的所有配置和脚本，而且还附有视频讲解，目前也一直在维护\n3.开始配置 具体过程我就不写了，上面的教程写的很清楚，我在这里只说几点我遇到的问题\n自从去年GFW开始加大对ssr的封锁，我当时立即就决定用上给自己的服务器配置上trojan，用到现在也快有五六个月了吧，很久没用过ssr了，也很久没买过机场了，之前一直白嫖谷歌云，后面才开始买阿里云国际的3.5美元套餐，虽然各种服务比不上机场，但感觉用自己搭建的总是安全私密一点（可能是自己的心理作用吧）\n好吧，回到正题，刚开始用圈X的时候我是懵逼的，这东西为什么不像小火煎那样，直接选择要连接的类型，然后在文本框中输入配置就算成功了，\n当然圈X也可以直接输入配置信息进行配置，不过只支持ss，先要用其它的协议，只能去编辑配置源文件，按照Quantumult X的示例文件中添加即可，就改几个参数而已\n下面是trojan的配置，将example.com改成你自己的trojan域名，pwd改成自己的密码就可以了\ntrojan=example.com:443, password=pwd, over-tls=true, tls-verification=true, fast-open=false, udp-relay=false, tag=trojan-tls-01 界面其实还挺好看的\n其实到这一步，基本上代理的功能就完成了，也就是小火箭的功能\n4.高级配置 在Quantumult X中有一个功能叫做重写，其实有点像我们在浏览器用到的js插件，也就是在页面中注入一些其它信息，比如逛京东时，可以看历史最低价\n看netflix时，可以看这个节目在IMDB和豆瓣的评分\n个人感觉是要方便很多\n另一个高级一点的功能就是定时任务，执行js脚本，这个我觉得也挺有用的，比如各种签到任务啊，用Quantumult X的一个比较突出的一个特点就是获取cookie方便多了，不像我搞个签到网站，还要各种抓包，最后还不一定能成功，这里我不过多赘述了，再次贴上项目合集的网址\nhttps://github.com/nzw9314/QuantumultX/tree/master","title":"Quantumult X 相关配置问题"},{"content":"1.在google云中创建一个实例 选择可用的地区，这里我选择的是新加坡，然后下面服务器配置选择Micro，允许http和https访问，最后点击创建，等待一会儿，点击右侧ssh连接服务器终端\n2.安装rclone 我们使用官方的脚本进行安装\n首先我们需要安装解压工具\nyum -y install unzip 然后使用官方提供的命令\ncurl https://rclone.org/install.sh | sudo bash 稍等一会儿就安装成功了\n3.配置rclone 安装完成后，我们在命令行输入以下代码\nrclone config 下面就开始进行配置操作\n首先是创建一个新连接\nn/s/q\u0026gt; n 输入名称(自己随便输入)\nname\u0026gt; gdShare 然后下面类型输入drive\nStorage\u0026gt; drive 后面两步都直接回车，不输入\nclient_id\u0026gt; client_secret\u0026gt; 下一步选择第一个选项\nscope\u0026gt; 1 再后面两步也是直接回车不输入\nroot_folder_id\u0026gt; service_account_file\u0026gt; 是否编辑预先配置，我们选择No\ny/n\u0026gt; n 使用自动配置我们这里也是选择No\ny/n\u0026gt; n 这时候会出来一段链接，点击直接打开或者复制用浏览器打开都可以，打开后，这里会要你登录你想挂载的google drive的账号，授权选择允许后会生成一个代码，将代码复制到下面的选项中就可以了\nEnter verification code\u0026gt; 【生成的代码】 然后会让你选择是否是团队账号，这里我们默认选择No\ny/n\u0026gt; n 然后下一步我们选择yes完成创建\ny/e/d\u0026gt; y 然后可以看到我们创建的项目了\n最后输入q退出配置\ne/n/d/r/c/s/q\u0026gt; q 4.挂载磁盘 创建一个文件夹来挂载磁盘\nmkdir /mnt/googledrive 在挂载之前，我们要先安装fuse文件系统\nyum -y install fuse 然后输入挂载命令\nrclone mount gdShare:/ /mnt/googledrive/ --allow-other --allow-non-empty --vfs-cache-mode writes \u0026amp; 输入命令查看是否挂载成功\n# df -h Filesystem Size Used Avail Use% Mounted on devtmpfs 285M 0 285M 0% /dev tmpfs 294M 0 294M 0% /dev/shm tmpfs 294M 4.4M 289M 2% /run tmpfs 294M 0 294M 0% /sys/fs/cgroup /dev/sda2 20G 2.2G 18G 11% / /dev/sda1 200M 12M 189M 6% /boot/efi tmpfs 59M 0 59M 0% /run/user/1000 gdShare: 15G 848K 15G 1% /mnt/googledrive 可以看到gdShare已经在上面了\n5.设置开机自动挂载 每次开关机服务器，rclone都要重新手动挂载，为了方便，我们设置自动挂载命令\n首先新建一个rclone.service文件\nvim /usr/lib/systemd/system/rclone.service 写入\n[Unit] Description=rclone [Service] User=root ExecStart=/usr/bin/rclone mount gdShare:/ /mnt/googledrive/ --allow-other --allow-non-empty --vfs-cache-mode writes Restart=on-abort [Install] WantedBy=multi-user.target 保存退出后\n重载daemon,让新的服务文件生效\nsystemctl daemon-reload 然后我们就可以通过systemctl来启动clone了\nsystemctl start rclone 设置开机自启\nsystemctl enable rclone 重启你的服务器，然后看一下rclone的服务启动了没有，再查看一下谷歌硬盘有没有挂载成功：\nreboot systemctl status rclone df -h 6.安装Aria2 我们这里要使用到wget，所以先安装wget\nyum -y install wget 然后我们使用P3TERX的一键安装版本\nwget -N git.io/aria2.sh \u0026amp;\u0026amp; chmod +x aria2.sh \u0026amp;\u0026amp; ./aria2.sh 首先我们输入1，安装Aria2，然后这个脚本会自动安装并启动Aria2\n安装时间可能比较长，会卡在一个地方很久，请不要中断安装，等待即可\n7.配置自动上传脚本 我们创建一个脚本\nvim rcloneupload.sh 填入以下内容,记得RemoteDIR和LocalDIR根据自己的实际情况进行设置\n#!/bin/bash  GID=\u0026#34;$1\u0026#34;; FileNum=\u0026#34;$2\u0026#34;; File=\u0026#34;$3\u0026#34;; MinSize=\u0026#34;5\u0026#34; #限制最低上传大小，默认5k MaxSize=\u0026#34;157286400\u0026#34; #限制最高文件大小(单位k)，默认15G RemoteDIR=\u0026#34;/mnt/googledrive/\u0026#34;; #rclone挂载的本地文件夹，最后面保留 / LocalDIR=\u0026#34;/root/download/\u0026#34;; #Aria2下载目录，最后面保留 / if [[ -z $(echo \u0026#34;$FileNum\u0026#34; |grep -o \u0026#39;[0-9]*\u0026#39; |head -n1) ]]; then FileNum=\u0026#39;0\u0026#39;; fi if [[ \u0026#34;$FileNum\u0026#34; -le \u0026#39;0\u0026#39; ]]; then exit 0; fi if [[ \u0026#34;$#\u0026#34; != \u0026#39;3\u0026#39; ]]; then exit 0; fi function LoadFile(){ IFS_BAK=$IFS IFS=$\u0026#39;\\n\u0026#39; if [[ ! -d \u0026#34;$LocalDIR\u0026#34; ]]; then return; fi if [[ -e \u0026#34;$File\u0026#34; ]]; then FileLoad=\u0026#34;${File/#$LocalDIR}\u0026#34; while true do if [[ \u0026#34;$FileLoad\u0026#34; == \u0026#39;/\u0026#39; ]]; then return; fi echo \u0026#34;$FileLoad\u0026#34; |grep -q \u0026#39;/\u0026#39;; if [[ \u0026#34;$?\u0026#34; == \u0026#34;0\u0026#34; ]]; then FileLoad=$(dirname \u0026#34;$FileLoad\u0026#34;); else break; fi; done; if [[ \u0026#34;$FileLoad\u0026#34; == \u0026#34;$LocalDIR\u0026#34; ]]; then return; fi EXEC=\u0026#34;$(command -v mv)\u0026#34; if [[ -z \u0026#34;$EXEC\u0026#34; ]]; then return; fi Option=\u0026#34; -f\u0026#34;; cd \u0026#34;$LocalDIR\u0026#34;; if [[ -e \u0026#34;$FileLoad\u0026#34; ]]; then ItemSize=$(du -s \u0026#34;$FileLoad\u0026#34; |cut -f1 |grep -o \u0026#39;[0-9]*\u0026#39; |head -n1) if [[ -z \u0026#34;$ItemSize\u0026#34; ]]; then return; fi if [[ \u0026#34;$ItemSize\u0026#34; -le \u0026#34;$MinSize\u0026#34; ]]; then echo -ne \u0026#34;\\033[33m$FileLoad\\033[0mtoo small to spik.\\n\u0026#34;; return; fi if [[ \u0026#34;$ItemSize\u0026#34; -ge \u0026#34;$MaxSize\u0026#34; ]]; then echo -ne \u0026#34;\\033[33m$FileLoad\\033[0mtoo large to spik.\\n\u0026#34;; return; fi eval \u0026#34;${EXEC}${Option}\u0026#34; \\\u0026#39;\u0026#34;${FileLoad}\u0026#34;\\\u0026#39; \u0026#34;${RemoteDIR}\u0026#34;; if [[ $? == \u0026#39;0\u0026#39; ]]; then rm -rf \u0026#34;$FileLoad\u0026#34;; fi fi fi IFS=$IFS_BAK } LoadFile; 给脚本添加可执行权限\nchmod +x rcloneupload.sh 然后再编辑Aria2配置文件，设置下载完成后执行的命令为rcloneupload.sh\nvim /root/.aria2/aria2.conf 内容如下所示\n# 下载完成后执行的命令 # 此项未定义则执行下载停止后执行的命令（on-download-stop） on-download-complete=/root/rcloneupload.sh 最后重启aria2即可\nservice aria2 restart 8.使用可视化面板进行操作 Aria2只是一个命令行程序，我们在这里需要配合前端面板才能获得更好的操作体验，AriaNg就是一个很不错的前端面板，但是，在这里我使用的是一个本地程序，他可以支持Windows和macOS，不需要用浏览器\n项目地址如下\nhttps://github.com/mayswind/AriaNg-Native\n下载合适的版本后，我们安装打开首先设置RPC，地址也就是你Aria2的服务器ip，协议我们选择http，请求方法为POST，密钥也就是我们在服务端生成的密钥\n视频教程请访问\nYoutube https://youtu.be/GFtZHti6P78\nBilibili https://b23.tv/Efpg4F\n","permalink":"https://blog.loyio.me/posts/gcp-create-gdrive-download-server/","summary":"1.在google云中创建一个实例 选择可用的地区，这里我选择的是新加坡，然后下面服务器配置选择Micro，允许http和https访问，最后点击创建，等待一会儿，点击右侧ssh连接服务器终端\n2.安装rclone 我们使用官方的脚本进行安装\n首先我们需要安装解压工具\nyum -y install unzip 然后使用官方提供的命令\ncurl https://rclone.org/install.sh | sudo bash 稍等一会儿就安装成功了\n3.配置rclone 安装完成后，我们在命令行输入以下代码\nrclone config 下面就开始进行配置操作\n首先是创建一个新连接\nn/s/q\u0026gt; n 输入名称(自己随便输入)\nname\u0026gt; gdShare 然后下面类型输入drive\nStorage\u0026gt; drive 后面两步都直接回车，不输入\nclient_id\u0026gt; client_secret\u0026gt; 下一步选择第一个选项\nscope\u0026gt; 1 再后面两步也是直接回车不输入\nroot_folder_id\u0026gt; service_account_file\u0026gt; 是否编辑预先配置，我们选择No\ny/n\u0026gt; n 使用自动配置我们这里也是选择No\ny/n\u0026gt; n 这时候会出来一段链接，点击直接打开或者复制用浏览器打开都可以，打开后，这里会要你登录你想挂载的google drive的账号，授权选择允许后会生成一个代码，将代码复制到下面的选项中就可以了\nEnter verification code\u0026gt; 【生成的代码】 然后会让你选择是否是团队账号，这里我们默认选择No\ny/n\u0026gt; n 然后下一步我们选择yes完成创建\ny/e/d\u0026gt; y 然后可以看到我们创建的项目了\n最后输入q退出配置\ne/n/d/r/c/s/q\u0026gt; q 4.挂载磁盘 创建一个文件夹来挂载磁盘\nmkdir /mnt/googledrive 在挂载之前，我们要先安装fuse文件系统\nyum -y install fuse 然后输入挂载命令","title":"使用谷歌云搭建google drive离线下载服务器"}]